diff --git a/node_modules/react-use-cart/dist/index.d.ts b/node_modules/react-use-cart/dist/index.d.ts
index ca0c1a6..b68fb3b 100644
--- a/node_modules/react-use-cart/dist/index.d.ts
+++ b/node_modules/react-use-cart/dist/index.d.ts
@@ -1,13 +1,13 @@
 import * as React from "react";
 export interface Item {
-    id: string;
+    _id: string;
     price: number;
     quantity?: number;
     itemTotal?: number;
     [key: string]: any;
 }
 interface InitialState {
-    id: string;
+    _id: string;
     items: Item[];
     isEmpty: boolean;
     totalItems: number;
@@ -20,13 +20,13 @@ export interface Metadata {
 }
 interface CartProviderState extends InitialState {
     addItem: (item: Item, quantity?: number) => void;
-    removeItem: (id: Item["id"]) => void;
-    updateItem: (id: Item["id"], payload: object) => void;
+    removeItem: (_id: Item["_id"]) => void;
+    updateItem: (_id: Item["_id"], payload: object) => void;
     setItems: (items: Item[]) => void;
-    updateItemQuantity: (id: Item["id"], quantity: number) => void;
+    updateItemQuantity: (_id: Item["_id"], quantity: number) => void;
     emptyCart: () => void;
-    getItem: (id: Item["id"]) => any | undefined;
-    inCart: (id: Item["id"]) => boolean;
+    getItem: (_id: Item["_id"]) => any | undefined;
+    inCart: (_id: Item["_id"]) => boolean;
     clearCartMetadata: () => void;
     setCartMetadata: (metadata: Metadata) => void;
     updateCartMetadata: (metadata: Metadata) => void;
@@ -39,10 +39,10 @@ export declare type Actions = {
     payload: Item;
 } | {
     type: "REMOVE_ITEM";
-    id: Item["id"];
+    _id: Item["_id"];
 } | {
     type: "UPDATE_ITEM";
-    id: Item["id"];
+    _id: Item["_id"];
     payload: object;
 } | {
     type: "EMPTY_CART";
@@ -60,12 +60,12 @@ export declare const createCartIdentifier: (len?: number) => string;
 export declare const useCart: () => CartProviderState;
 export declare const CartProvider: React.FC<{
     children?: React.ReactNode;
-    id?: string;
+    _id?: string;
     defaultItems?: Item[];
     onSetItems?: (items: Item[]) => void;
     onItemAdd?: (payload: Item) => void;
     onItemUpdate?: (payload: object) => void;
-    onItemRemove?: (id: Item["id"]) => void;
+    onItemRemove?: (_id: Item["_id"]) => void;
     storage?: (key: string, initialValue: string) => [string, (value: Function | string) => void];
     metadata?: Metadata;
 }>;
diff --git a/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js b/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js
index decf61c..c175abe 100644
--- a/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js
+++ b/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js
@@ -85,7 +85,7 @@ function reducer(state, action) {
     case "UPDATE_ITEM":
       {
         var _items = state.items.map(function (item) {
-          if (item.id !== action.id) return item;
+          if (item._id !== action._id) return item;
           return _extends({}, item, action.payload);
         });
 
@@ -95,7 +95,7 @@ function reducer(state, action) {
     case "REMOVE_ITEM":
       {
         var _items2 = state.items.filter(function (i) {
-          return i.id !== action.id;
+          return i._id !== action._id;
         });
 
         return generateCartState(state, _items2);
@@ -166,7 +166,7 @@ var calculateUniqueItems = function calculateUniqueItems(items) {
 
 var CartProvider = function CartProvider(_ref) {
   var children = _ref.children,
-      cartId = _ref.id,
+      cartId = _ref._id,
       _ref$defaultItems = _ref.defaultItems,
       defaultItems = _ref$defaultItems === void 0 ? [] : _ref$defaultItems,
       onSetItems = _ref.onSetItems,
@@ -176,10 +176,10 @@ var CartProvider = function CartProvider(_ref) {
       _ref$storage = _ref.storage,
       storage = _ref$storage === void 0 ? useLocalStorage : _ref$storage,
       metadata = _ref.metadata;
-  var id = cartId ? cartId : createCartIdentifier();
+  var _id = cartId ? cartId : createCartIdentifier();
 
-  var _storage = storage(cartId ? "react-use-cart-" + id : "react-use-cart", JSON.stringify(_extends({
-    id: id
+  var _storage = storage(cartId ? "react-use-cart-" + _id : "react-use-cart", JSON.stringify(_extends({
+    _id: _id
   }, initialState, {
     items: defaultItems,
     metadata: metadata
@@ -212,10 +212,10 @@ var CartProvider = function CartProvider(_ref) {
       quantity = 1;
     }
 
-    if (!item.id) throw new Error("You must provide an `id` for items");
+    if (!item._id) throw new Error("You must provide an `_id` for items");
     if (quantity <= 0) return;
     var currentItem = state.items.find(function (i) {
-      return i.id === item.id;
+      return i._id === item._id;
     });
     if (!currentItem && !item.hasOwnProperty("price")) throw new Error("You must pass a `price` for new items");
 
@@ -238,37 +238,37 @@ var CartProvider = function CartProvider(_ref) {
 
     dispatch({
       type: "UPDATE_ITEM",
-      id: item.id,
+      _id: item._id,
       payload: payload
     });
     onItemUpdate && onItemUpdate(payload);
   };
 
-  var updateItem = function updateItem(id, payload) {
-    if (!id || !payload) {
+  var updateItem = function updateItem(_id, payload) {
+    if (!_id || !payload) {
       return;
     }
 
     dispatch({
       type: "UPDATE_ITEM",
-      id: id,
+      _id: _id,
       payload: payload
     });
     onItemUpdate && onItemUpdate(payload);
   };
 
-  var updateItemQuantity = function updateItemQuantity(id, quantity) {
+  var updateItemQuantity = function updateItemQuantity(_id, quantity) {
     if (quantity <= 0) {
-      onItemRemove && onItemRemove(id);
+      onItemRemove && onItemRemove(_id);
       dispatch({
         type: "REMOVE_ITEM",
-        id: id
+        _id: _id
       });
       return;
     }
 
     var currentItem = state.items.find(function (item) {
-      return item.id === id;
+      return item._id === _id;
     });
     if (!currentItem) throw new Error("No such item to update");
 
@@ -278,19 +278,19 @@ var CartProvider = function CartProvider(_ref) {
 
     dispatch({
       type: "UPDATE_ITEM",
-      id: id,
+      _id: _id,
       payload: payload
     });
     onItemUpdate && onItemUpdate(payload);
   };
 
-  var removeItem = function removeItem(id) {
-    if (!id) return;
+  var removeItem = function removeItem(_id) {
+    if (!_id) return;
     dispatch({
       type: "REMOVE_ITEM",
-      id: id
+      _id: _id
     });
-    onItemRemove && onItemRemove(id);
+    onItemRemove && onItemRemove(_id);
   };
 
   var emptyCart = function emptyCart() {
@@ -299,15 +299,15 @@ var CartProvider = function CartProvider(_ref) {
     });
   };
 
-  var getItem = function getItem(id) {
+  var getItem = function getItem(_id) {
     return state.items.find(function (i) {
-      return i.id === id;
+      return i._id === _id;
     });
   };
 
-  var inCart = function inCart(id) {
+  var inCart = function inCart(_id) {
     return state.items.some(function (i) {
-      return i.id === id;
+      return i._id === _id;
     });
   };
 
diff --git a/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js.map b/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js.map
index 92ad9b5..9fbe194 100644
--- a/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js.map
+++ b/node_modules/react-use-cart/dist/react-use-cart.cjs.development.js.map
@@ -1 +1 @@
-{"version":3,"file":"react-use-cart.cjs.development.js","sources":["../src/useLocalStorage.ts","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"names":["useLocalStorage","key","initialValue","React","item","window","localStorage","getItem","error","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","createCartIdentifier","len","Array","map","Math","random","toString","join","useCart","context","Error","reducer","state","action","type","generateCartState","payload","id","filter","i","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","CartProvider","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","JSON","stringify","savedCart","saveCart","parse","dispatch","setItems","addItem","currentItem","find","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","inCart","some","clearCartMetadata","setCartMetadata","updateCartMetadata","Provider"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"react-use-cart.cjs.development.js","sources":["../src/useLocalStorage.ts","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  _id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  _id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (_id: Item[\"_id\"]) => void;\n  updateItem: (_id: Item[\"_id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (_id: Item[\"_id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (_id: Item[\"_id\"]) => any | undefined;\n  inCart: (_id: Item[\"_id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; _id: Item[\"_id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      _id: Item[\"_id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item._id !== action._id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i._id !== action._id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  _id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (_id: Item[\"_id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  _id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const _id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${_id}` : `react-use-cart`,\n    JSON.stringify({\n      _id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item._id) throw new Error(\"You must provide an `_id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i._id === item._id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      _id: item._id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (_id: Item[\"_id\"], payload: object) => {\n    if (!_id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", _id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (_id: Item[\"_id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(_id);\n\n      dispatch({ type: \"REMOVE_ITEM\", _id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item._id === _id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      _id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (_id: Item[\"_id\"]) => {\n    if (!_id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", _id });\n\n    onItemRemove && onItemRemove(_id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (_id: Item[\"_id\"]) =>\n    state.items.find((i: Item) => i._id === _id);\n\n  const inCart = (_id: Item[\"_id\"]) => state.items.some((i: Item) => i._id === _id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"names":["useLocalStorage","key","initialValue","React","item","window","localStorage","getItem","error","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","createCartIdentifier","len","Array","map","Math","random","toString","join","useCart","context","Error","reducer","state","action","type","generateCartState","payload","_id","filter","i","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","CartProvider","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","JSON","stringify","savedCart","saveCart","parse","dispatch","setItems","addItem","currentItem","find","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","inCart","some","clearCartMetadata","setCartMetadata","updateCartMetadata","Provider"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js b/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js
index 79af312..d6b78fa 100644
--- a/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js
+++ b/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js
@@ -1,2 +1,2 @@
-"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("react");function e(){return(e=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}).apply(this,arguments)}function r(e,r){var n=t.useState((function(){try{return"undefined"!=typeof window&&window.localStorage.getItem(e)||r}catch(t){return r}})),a=n[0],i=n[1];return[a,function(t){try{var r=t instanceof Function?t(a):t;i(r),window.localStorage.setItem(e,r)}catch(t){console.log(t)}}]}var n={items:[],isEmpty:!0,totalItems:0,totalUniqueItems:0,cartTotal:0,metadata:{}},a=t.createContext(n),i=function(t){return void 0===t&&(t=12),[].concat(Array(t)).map((function(){return(~~(36*Math.random())).toString(36)})).join("")};function o(t,r){switch(r.type){case"SET_ITEMS":return u(t,r.payload);case"ADD_ITEM":var a=[].concat(t.items,[r.payload]);return u(t,a);case"UPDATE_ITEM":var i=t.items.map((function(t){return t.id!==r.id?t:e({},t,r.payload)}));return u(t,i);case"REMOVE_ITEM":var o=t.items.filter((function(t){return t.id!==r.id}));return u(t,o);case"EMPTY_CART":return n;case"CLEAR_CART_META":return e({},t,{metadata:{}});case"SET_CART_META":return e({},t,{metadata:e({},r.payload)});case"UPDATE_CART_META":return e({},t,{metadata:e({},t.metadata,r.payload)});default:throw new Error("No action specified")}}var u=function(t,r){void 0===t&&(t=n);var a=f(r),i=0===a;return e({},n,t,{items:c(r),totalItems:s(r),totalUniqueItems:a,cartTotal:d(r),isEmpty:i})},c=function(t){return t.map((function(t){return e({},t,{itemTotal:t.price*t.quantity})}))},d=function(t){return t.reduce((function(t,e){return t+e.quantity*e.price}),0)},s=function(t){return t.reduce((function(t,e){return t+e.quantity}),0)},f=function(t){return t.length};exports.CartProvider=function(u){var c=u.children,d=u.id,s=u.defaultItems,f=void 0===s?[]:s,p=u.onSetItems,m=u.onItemAdd,y=u.onItemUpdate,E=u.onItemRemove,l=u.storage,T=void 0===l?r:l,v=u.metadata,I=d||i(),M=T(d?"react-use-cart-"+I:"react-use-cart",JSON.stringify(e({id:I},n,{items:f,metadata:v}))),_=M[1],A=t.useReducer(o,JSON.parse(M[0])),w=A[0],C=A[1];return t.useEffect((function(){_(JSON.stringify(w))}),[w,_]),t.createElement(a.Provider,{value:e({},w,{getItem:function(t){return w.items.find((function(e){return e.id===t}))},inCart:function(t){return w.items.some((function(e){return e.id===t}))},setItems:function(t){C({type:"SET_ITEMS",payload:t.map((function(t){return e({},t,{quantity:t.quantity||1})}))}),p&&p(t)},addItem:function(t,r){if(void 0===r&&(r=1),!t.id)throw new Error("You must provide an `id` for items");if(!(r<=0)){var n=w.items.find((function(e){return e.id===t.id}));if(!n&&!t.hasOwnProperty("price"))throw new Error("You must pass a `price` for new items");if(!n){var a=e({},t,{quantity:r});return C({type:"ADD_ITEM",payload:a}),void(m&&m(a))}var i=e({},t,{quantity:n.quantity+r});C({type:"UPDATE_ITEM",id:t.id,payload:i}),y&&y(i)}},updateItem:function(t,e){t&&e&&(C({type:"UPDATE_ITEM",id:t,payload:e}),y&&y(e))},updateItemQuantity:function(t,r){if(r<=0)return E&&E(t),void C({type:"REMOVE_ITEM",id:t});var n=w.items.find((function(e){return e.id===t}));if(!n)throw new Error("No such item to update");var a=e({},n,{quantity:r});C({type:"UPDATE_ITEM",id:t,payload:a}),y&&y(a)},removeItem:function(t){t&&(C({type:"REMOVE_ITEM",id:t}),E&&E(t))},emptyCart:function(){return C({type:"EMPTY_CART"})},clearCartMetadata:function(){C({type:"CLEAR_CART_META"})},setCartMetadata:function(t){t&&C({type:"SET_CART_META",payload:t})},updateCartMetadata:function(t){t&&C({type:"UPDATE_CART_META",payload:t})}})},c)},exports.createCartIdentifier=i,exports.initialState=n,exports.useCart=function(){var e=t.useContext(a);if(!e)throw new Error("Expected to be wrapped in a CartProvider");return e};
+"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("react");function e(){return(e=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}).apply(this,arguments)}function r(e,r){var n=t.useState((function(){try{return"undefined"!=typeof window&&window.localStorage.getItem(e)||r}catch(t){return r}})),a=n[0],i=n[1];return[a,function(t){try{var r=t instanceof Function?t(a):t;i(r),window.localStorage.setItem(e,r)}catch(t){console.log(t)}}]}var n={items:[],isEmpty:!0,totalItems:0,totalUniqueItems:0,cartTotal:0,metadata:{}},a=t.createContext(n),i=function(t){return void 0===t&&(t=12),[].concat(Array(t)).map((function(){return(~~(36*Math.random())).toString(36)})).join("")};function o(t,r){switch(r.type){case"SET_ITEMS":return u(t,r.payload);case"ADD_ITEM":var a=[].concat(t.items,[r.payload]);return u(t,a);case"UPDATE_ITEM":var i=t.items.map((function(t){return t._id!==r._id?t:e({},t,r.payload)}));return u(t,i);case"REMOVE_ITEM":var o=t.items.filter((function(t){return t._id!==r._id}));return u(t,o);case"EMPTY_CART":return n;case"CLEAR_CART_META":return e({},t,{metadata:{}});case"SET_CART_META":return e({},t,{metadata:e({},r.payload)});case"UPDATE_CART_META":return e({},t,{metadata:e({},t.metadata,r.payload)});default:throw new Error("No action specified")}}var u=function(t,r){void 0===t&&(t=n);var a=f(r),i=0===a;return e({},n,t,{items:c(r),totalItems:s(r),totalUniqueItems:a,cartTotal:d(r),isEmpty:i})},c=function(t){return t.map((function(t){return e({},t,{itemTotal:t.price*t.quantity})}))},d=function(t){return t.reduce((function(t,e){return t+e.quantity*e.price}),0)},s=function(t){return t.reduce((function(t,e){return t+e.quantity}),0)},f=function(t){return t.length};exports.CartProvider=function(u){var c=u.children,d=u._id,s=u.defaultItems,f=void 0===s?[]:s,p=u.onSetItems,m=u.onItemAdd,y=u.onItemUpdate,E=u.onItemRemove,l=u.storage,T=void 0===l?r:l,v=u.metadata,I=d||i(),M=T(d?"react-use-cart-"+I:"react-use-cart",JSON.stringify(e({_id:I},n,{items:f,metadata:v}))),_=M[1],A=t.useReducer(o,JSON.parse(M[0])),w=A[0],C=A[1];return t.useEffect((function(){_(JSON.stringify(w))}),[w,_]),t.createElement(a.Provider,{value:e({},w,{getItem:function(t){return w.items.find((function(e){return e._id===t}))},inCart:function(t){return w.items.some((function(e){return e._id===t}))},setItems:function(t){C({type:"SET_ITEMS",payload:t.map((function(t){return e({},t,{quantity:t.quantity||1})}))}),p&&p(t)},addItem:function(t,r){if(void 0===r&&(r=1),!t._id)throw new Error("You must provide an `_id` for items");if(!(r<=0)){var n=w.items.find((function(e){return e._id===t._id}));if(!n&&!t.hasOwnProperty("price"))throw new Error("You must pass a `price` for new items");if(!n){var a=e({},t,{quantity:r});return C({type:"ADD_ITEM",payload:a}),void(m&&m(a))}var i=e({},t,{quantity:n.quantity+r});C({type:"UPDATE_ITEM",_id:t._id,payload:i}),y&&y(i)}},updateItem:function(t,e){t&&e&&(C({type:"UPDATE_ITEM",_id:t,payload:e}),y&&y(e))},updateItemQuantity:function(t,r){if(r<=0)return E&&E(t),void C({type:"REMOVE_ITEM",_id:t});var n=w.items.find((function(e){return e._id===t}));if(!n)throw new Error("No such item to update");var a=e({},n,{quantity:r});C({type:"UPDATE_ITEM",_id:t,payload:a}),y&&y(a)},removeItem:function(t){t&&(C({type:"REMOVE_ITEM",_id:t}),E&&E(t))},emptyCart:function(){return C({type:"EMPTY_CART"})},clearCartMetadata:function(){C({type:"CLEAR_CART_META"})},setCartMetadata:function(t){t&&C({type:"SET_CART_META",payload:t})},updateCartMetadata:function(t){t&&C({type:"UPDATE_CART_META",payload:t})}})},c)},exports.createCartIdentifier=i,exports.initialState=n,exports.useCart=function(){var e=t.useContext(a);if(!e)throw new Error("Expected to be wrapped in a CartProvider");return e};
 //# sourceMappingURL=react-use-cart.cjs.production.min.js.map
diff --git a/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js.map b/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js.map
index 1a797b9..c59a93e 100644
--- a/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js.map
+++ b/node_modules/react-use-cart/dist/react-use-cart.cjs.production.min.js.map
@@ -1 +1 @@
-{"version":3,"file":"react-use-cart.cjs.production.min.js","sources":["../src/useLocalStorage.ts","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"names":["useLocalStorage","key","initialValue","React","window","localStorage","getItem","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","createCartIdentifier","len","Array","map","Math","random","toString","join","reducer","state","action","type","generateCartState","payload","item","id","filter","i","Error","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","JSON","stringify","saveCart","parse","dispatch","Provider","find","inCart","some","setItems","addItem","currentItem","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","clearCartMetadata","setCartMetadata","updateCartMetadata","context"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"react-use-cart.cjs.production.min.js","sources":["../src/useLocalStorage.ts","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  _id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  _id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (_id: Item[\"_id\"]) => void;\n  updateItem: (_id: Item[\"_id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (_id: Item[\"_id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (_id: Item[\"_id\"]) => any | undefined;\n  inCart: (_id: Item[\"_id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; _id: Item[\"_id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      _id: Item[\"_id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item._id !== action._id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i._id !== action._id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  _id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (_id: Item[\"_id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  _id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const _id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${_id}` : `react-use-cart`,\n    JSON.stringify({\n      _id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item._id) throw new Error(\"You must provide an `_id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i._id === item._id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      _id: item._id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (_id: Item[\"_id\"], payload: object) => {\n    if (!_id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", _id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (_id: Item[\"_id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(_id);\n\n      dispatch({ type: \"REMOVE_ITEM\", _id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item._id === _id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      _id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (_id: Item[\"_id\"]) => {\n    if (!_id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", _id });\n\n    onItemRemove && onItemRemove(_id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (_id: Item[\"_id\"]) =>\n    state.items.find((i: Item) => i._id === _id);\n\n  const inCart = (_id: Item[\"_id\"]) => state.items.some((i: Item) => i._id === _id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"names":["useLocalStorage","key","initialValue","React","window","localStorage","getItem","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","createCartIdentifier","len","Array","map","Math","random","toString","join","reducer","state","action","type","generateCartState","payload","item","_id","filter","i","Error","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","JSON","stringify","saveCart","parse","dispatch","Provider","find","inCart","some","setItems","addItem","currentItem","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","clearCartMetadata","setCartMetadata","updateCartMetadata","context"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-use-cart/dist/react-use-cart.esm.js b/node_modules/react-use-cart/dist/react-use-cart.esm.js
index b74694d..03c18c4 100644
--- a/node_modules/react-use-cart/dist/react-use-cart.esm.js
+++ b/node_modules/react-use-cart/dist/react-use-cart.esm.js
@@ -81,7 +81,7 @@ function reducer(state, action) {
     case "UPDATE_ITEM":
       {
         var _items = state.items.map(function (item) {
-          if (item.id !== action.id) return item;
+          if (item._id !== action._id) return item;
           return _extends({}, item, action.payload);
         });
 
@@ -91,7 +91,7 @@ function reducer(state, action) {
     case "REMOVE_ITEM":
       {
         var _items2 = state.items.filter(function (i) {
-          return i.id !== action.id;
+          return i._id !== action._id;
         });
 
         return generateCartState(state, _items2);
@@ -162,7 +162,7 @@ var calculateUniqueItems = function calculateUniqueItems(items) {
 
 var CartProvider = function CartProvider(_ref) {
   var children = _ref.children,
-      cartId = _ref.id,
+      cartId = _ref._id,
       _ref$defaultItems = _ref.defaultItems,
       defaultItems = _ref$defaultItems === void 0 ? [] : _ref$defaultItems,
       onSetItems = _ref.onSetItems,
@@ -172,10 +172,10 @@ var CartProvider = function CartProvider(_ref) {
       _ref$storage = _ref.storage,
       storage = _ref$storage === void 0 ? useLocalStorage : _ref$storage,
       metadata = _ref.metadata;
-  var id = cartId ? cartId : createCartIdentifier();
+  var _id = cartId ? cartId : createCartIdentifier();
 
-  var _storage = storage(cartId ? "react-use-cart-" + id : "react-use-cart", JSON.stringify(_extends({
-    id: id
+  var _storage = storage(cartId ? "react-use-cart-" + _id : "react-use-cart", JSON.stringify(_extends({
+    _id: _id
   }, initialState, {
     items: defaultItems,
     metadata: metadata
@@ -208,10 +208,10 @@ var CartProvider = function CartProvider(_ref) {
       quantity = 1;
     }
 
-    if (!item.id) throw new Error("You must provide an `id` for items");
+    if (!item._id) throw new Error("You must provide an `_id` for items");
     if (quantity <= 0) return;
     var currentItem = state.items.find(function (i) {
-      return i.id === item.id;
+      return i._id === item._id;
     });
     if (!currentItem && !item.hasOwnProperty("price")) throw new Error("You must pass a `price` for new items");
 
@@ -234,37 +234,37 @@ var CartProvider = function CartProvider(_ref) {
 
     dispatch({
       type: "UPDATE_ITEM",
-      id: item.id,
+      _id: item._id,
       payload: payload
     });
     onItemUpdate && onItemUpdate(payload);
   };
 
-  var updateItem = function updateItem(id, payload) {
-    if (!id || !payload) {
+  var updateItem = function updateItem(_id, payload) {
+    if (!_id || !payload) {
       return;
     }
 
     dispatch({
       type: "UPDATE_ITEM",
-      id: id,
+      _id: _id,
       payload: payload
     });
     onItemUpdate && onItemUpdate(payload);
   };
 
-  var updateItemQuantity = function updateItemQuantity(id, quantity) {
+  var updateItemQuantity = function updateItemQuantity(_id, quantity) {
     if (quantity <= 0) {
-      onItemRemove && onItemRemove(id);
+      onItemRemove && onItemRemove(_id);
       dispatch({
         type: "REMOVE_ITEM",
-        id: id
+        _id: _id
       });
       return;
     }
 
     var currentItem = state.items.find(function (item) {
-      return item.id === id;
+      return item._id === _id;
     });
     if (!currentItem) throw new Error("No such item to update");
 
@@ -274,19 +274,19 @@ var CartProvider = function CartProvider(_ref) {
 
     dispatch({
       type: "UPDATE_ITEM",
-      id: id,
+      _id: _id,
       payload: payload
     });
     onItemUpdate && onItemUpdate(payload);
   };
 
-  var removeItem = function removeItem(id) {
-    if (!id) return;
+  var removeItem = function removeItem(_id) {
+    if (!_id) return;
     dispatch({
       type: "REMOVE_ITEM",
-      id: id
+      _id: _id
     });
-    onItemRemove && onItemRemove(id);
+    onItemRemove && onItemRemove(_id);
   };
 
   var emptyCart = function emptyCart() {
@@ -295,15 +295,15 @@ var CartProvider = function CartProvider(_ref) {
     });
   };
 
-  var getItem = function getItem(id) {
+  var getItem = function getItem(_id) {
     return state.items.find(function (i) {
-      return i.id === id;
+      return i._id === _id;
     });
   };
 
-  var inCart = function inCart(id) {
+  var inCart = function inCart(_id) {
     return state.items.some(function (i) {
-      return i.id === id;
+      return i._id === _id;
     });
   };
 
diff --git a/node_modules/react-use-cart/dist/react-use-cart.esm.js.map b/node_modules/react-use-cart/dist/react-use-cart.esm.js.map
index d9e2569..3003661 100644
--- a/node_modules/react-use-cart/dist/react-use-cart.esm.js.map
+++ b/node_modules/react-use-cart/dist/react-use-cart.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"react-use-cart.esm.js","sources":["../src/useLocalStorage.ts","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"names":["useLocalStorage","key","initialValue","React","item","window","localStorage","getItem","error","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","createCartIdentifier","len","Array","map","Math","random","toString","join","useCart","context","Error","reducer","state","action","type","generateCartState","payload","id","filter","i","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","CartProvider","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","JSON","stringify","savedCart","saveCart","parse","dispatch","setItems","addItem","currentItem","find","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","inCart","some","clearCartMetadata","setCartMetadata","updateCartMetadata","Provider"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"react-use-cart.esm.js","sources":["../src/useLocalStorage.ts","../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  _id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  _id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (_id: Item[\"_id\"]) => void;\n  updateItem: (_id: Item[\"_id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (_id: Item[\"_id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (_id: Item[\"_id\"]) => any | undefined;\n  inCart: (_id: Item[\"_id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; _id: Item[\"_id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      _id: Item[\"_id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item._id !== action._id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i._id !== action._id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  _id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (_id: Item[\"_id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  _id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const _id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${_id}` : `react-use-cart`,\n    JSON.stringify({\n      _id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item._id) throw new Error(\"You must provide an `_id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i._id === item._id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      _id: item._id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (_id: Item[\"_id\"], payload: object) => {\n    if (!_id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", _id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (_id: Item[\"_id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(_id);\n\n      dispatch({ type: \"REMOVE_ITEM\", _id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item._id === _id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      _id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (_id: Item[\"_id\"]) => {\n    if (!_id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", _id });\n\n    onItemRemove && onItemRemove(_id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (_id: Item[\"_id\"]) =>\n    state.items.find((i: Item) => i._id === _id);\n\n  const inCart = (_id: Item[\"_id\"]) => state.items.some((i: Item) => i._id === _id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"names":["useLocalStorage","key","initialValue","React","item","window","localStorage","getItem","error","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","console","log","initialState","items","isEmpty","totalItems","totalUniqueItems","cartTotal","metadata","CartContext","createCartIdentifier","len","Array","map","Math","random","toString","join","useCart","context","Error","reducer","state","action","type","generateCartState","payload","_id","filter","i","calculateUniqueItems","calculateItemTotals","calculateTotalItems","calculateTotal","itemTotal","price","quantity","reduce","total","sum","length","CartProvider","children","cartId","defaultItems","onSetItems","onItemAdd","onItemUpdate","onItemRemove","storage","JSON","stringify","savedCart","saveCart","parse","dispatch","setItems","addItem","currentItem","find","hasOwnProperty","updateItem","updateItemQuantity","removeItem","emptyCart","inCart","some","clearCartMetadata","setCartMetadata","updateCartMetadata","Provider"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-use-cart/src/index.tsx b/node_modules/react-use-cart/src/index.tsx
index 8121154..87f2ec2 100644
--- a/node_modules/react-use-cart/src/index.tsx
+++ b/node_modules/react-use-cart/src/index.tsx
@@ -3,7 +3,7 @@ import * as React from "react";
 import useLocalStorage from "./useLocalStorage";
 
 export interface Item {
-  id: string;
+  _id: string;
   price: number;
   quantity?: number;
   itemTotal?: number;
@@ -11,7 +11,7 @@ export interface Item {
 }
 
 interface InitialState {
-  id: string;
+  _id: string;
   items: Item[];
   isEmpty: boolean;
   totalItems: number;
@@ -26,13 +26,13 @@ export interface Metadata {
 
 interface CartProviderState extends InitialState {
   addItem: (item: Item, quantity?: number) => void;
-  removeItem: (id: Item["id"]) => void;
-  updateItem: (id: Item["id"], payload: object) => void;
+  removeItem: (_id: Item["_id"]) => void;
+  updateItem: (_id: Item["_id"], payload: object) => void;
   setItems: (items: Item[]) => void;
-  updateItemQuantity: (id: Item["id"], quantity: number) => void;
+  updateItemQuantity: (_id: Item["_id"], quantity: number) => void;
   emptyCart: () => void;
-  getItem: (id: Item["id"]) => any | undefined;
-  inCart: (id: Item["id"]) => boolean;
+  getItem: (_id: Item["_id"]) => any | undefined;
+  inCart: (_id: Item["_id"]) => boolean;
   clearCartMetadata: () => void;
   setCartMetadata: (metadata: Metadata) => void;
   updateCartMetadata: (metadata: Metadata) => void;
@@ -41,10 +41,10 @@ interface CartProviderState extends InitialState {
 export type Actions =
   | { type: "SET_ITEMS"; payload: Item[] }
   | { type: "ADD_ITEM"; payload: Item }
-  | { type: "REMOVE_ITEM"; id: Item["id"] }
+  | { type: "REMOVE_ITEM"; _id: Item["_id"] }
   | {
       type: "UPDATE_ITEM";
-      id: Item["id"];
+      _id: Item["_id"];
       payload: object;
     }
   | { type: "EMPTY_CART" }
@@ -89,7 +89,7 @@ function reducer(state: CartProviderState, action: Actions) {
 
     case "UPDATE_ITEM": {
       const items = state.items.map((item: Item) => {
-        if (item.id !== action.id) return item;
+        if (item._id !== action._id) return item;
 
         return {
           ...item,
@@ -101,7 +101,7 @@ function reducer(state: CartProviderState, action: Actions) {
     }
 
     case "REMOVE_ITEM": {
-      const items = state.items.filter((i: Item) => i.id !== action.id);
+      const items = state.items.filter((i: Item) => i._id !== action._id);
 
       return generateCartState(state, items);
     }
@@ -168,12 +168,12 @@ const calculateUniqueItems = (items: Item[]) => items.length;
 
 export const CartProvider: React.FC<{
   children?: React.ReactNode;
-  id?: string;
+  _id?: string;
   defaultItems?: Item[];
   onSetItems?: (items: Item[]) => void;
   onItemAdd?: (payload: Item) => void;
   onItemUpdate?: (payload: object) => void;
-  onItemRemove?: (id: Item["id"]) => void;
+  onItemRemove?: (_id: Item["_id"]) => void;
   storage?: (
     key: string,
     initialValue: string
@@ -181,7 +181,7 @@ export const CartProvider: React.FC<{
   metadata?: Metadata;
 }> = ({
   children,
-  id: cartId,
+  _id: cartId,
   defaultItems = [],
   onSetItems,
   onItemAdd,
@@ -190,12 +190,12 @@ export const CartProvider: React.FC<{
   storage = useLocalStorage,
   metadata,
 }) => {
-  const id = cartId ? cartId : createCartIdentifier();
+  const _id = cartId ? cartId : createCartIdentifier();
 
   const [savedCart, saveCart] = storage(
-    cartId ? `react-use-cart-${id}` : `react-use-cart`,
+    cartId ? `react-use-cart-${_id}` : `react-use-cart`,
     JSON.stringify({
-      id,
+      _id,
       ...initialState,
       items: defaultItems,
       metadata,
@@ -220,10 +220,10 @@ export const CartProvider: React.FC<{
   };
 
   const addItem = (item: Item, quantity = 1) => {
-    if (!item.id) throw new Error("You must provide an `id` for items");
+    if (!item._id) throw new Error("You must provide an `_id` for items");
     if (quantity <= 0) return;
 
-    const currentItem = state.items.find((i: Item) => i.id === item.id);
+    const currentItem = state.items.find((i: Item) => i._id === item._id);
 
     if (!currentItem && !item.hasOwnProperty("price"))
       throw new Error("You must pass a `price` for new items");
@@ -242,33 +242,33 @@ export const CartProvider: React.FC<{
 
     dispatch({
       type: "UPDATE_ITEM",
-      id: item.id,
+      _id: item._id,
       payload,
     });
 
     onItemUpdate && onItemUpdate(payload);
   };
 
-  const updateItem = (id: Item["id"], payload: object) => {
-    if (!id || !payload) {
+  const updateItem = (_id: Item["_id"], payload: object) => {
+    if (!_id || !payload) {
       return;
     }
 
-    dispatch({ type: "UPDATE_ITEM", id, payload });
+    dispatch({ type: "UPDATE_ITEM", _id, payload });
 
     onItemUpdate && onItemUpdate(payload);
   };
 
-  const updateItemQuantity = (id: Item["id"], quantity: number) => {
+  const updateItemQuantity = (_id: Item["_id"], quantity: number) => {
     if (quantity <= 0) {
-      onItemRemove && onItemRemove(id);
+      onItemRemove && onItemRemove(_id);
 
-      dispatch({ type: "REMOVE_ITEM", id });
+      dispatch({ type: "REMOVE_ITEM", _id });
 
       return;
     }
 
-    const currentItem = state.items.find((item: Item) => item.id === id);
+    const currentItem = state.items.find((item: Item) => item._id === _id);
 
     if (!currentItem) throw new Error("No such item to update");
 
@@ -276,19 +276,19 @@ export const CartProvider: React.FC<{
 
     dispatch({
       type: "UPDATE_ITEM",
-      id,
+      _id,
       payload,
     });
 
     onItemUpdate && onItemUpdate(payload);
   };
 
-  const removeItem = (id: Item["id"]) => {
-    if (!id) return;
+  const removeItem = (_id: Item["_id"]) => {
+    if (!_id) return;
 
-    dispatch({ type: "REMOVE_ITEM", id });
+    dispatch({ type: "REMOVE_ITEM", _id });
 
-    onItemRemove && onItemRemove(id);
+    onItemRemove && onItemRemove(_id);
   };
 
   const emptyCart = () =>
@@ -296,10 +296,10 @@ export const CartProvider: React.FC<{
       type: "EMPTY_CART",
     });
 
-  const getItem = (id: Item["id"]) =>
-    state.items.find((i: Item) => i.id === id);
+  const getItem = (_id: Item["_id"]) =>
+    state.items.find((i: Item) => i._id === _id);
 
-  const inCart = (id: Item["id"]) => state.items.some((i: Item) => i.id === id);
+  const inCart = (_id: Item["_id"]) => state.items.some((i: Item) => i._id === _id);
 
   const clearCartMetadata = () => {
     dispatch({
